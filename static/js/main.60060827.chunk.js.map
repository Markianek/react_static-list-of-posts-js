{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","_ref","comment","name","email","body","_jsxs","className","children","_jsx","href","concat","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"k18IAAO,MAAMA,EAAcC,IAAkB,IAAjB,QAAEC,GAASD,EACrC,MAAM,KACJE,EAAI,MACJC,EAAK,KACLC,GACEH,EAEJ,OACEI,eAAA,OAAKC,UAAU,cAAaC,SAAA,CAC1BF,eAAA,OAAKC,UAAU,qBAAoBC,SAAA,CACjCC,cAAA,UAAQF,UAAU,oBAAmBC,SAAEL,IAEtC,OAEDM,cAAA,KACEF,UAAU,qBACVG,KAAI,UAAAC,OAAYP,GAAQI,SAEvBJ,OAILK,cAAA,OAAKF,UAAU,oBAAmBC,SAC/BH,QCnBIO,EAAcX,IAAA,IAAC,SAAEY,GAAUZ,EAAA,OACtCQ,cAAA,OAAKF,UAAU,cAAaC,SACzBK,EAASC,KAAIZ,GACZO,cAACT,EAAW,CAACE,QAASA,GAAcA,EAAQa,S,MCL3C,MAAMC,EAAWf,IAAe,IAAd,KAAEgB,GAAMhB,EAC/B,MAAM,KACJE,EAAI,MACJC,GACEa,EAEJ,OACER,cAAA,KAAGF,UAAU,WAAWG,KAAI,UAAAC,OAAYP,GAAQI,SAC7CL,KCLMe,EAAWjB,IAAe,IAAd,KAAEkB,GAAMlB,EAC/B,MAAM,MACJmB,EAAK,KACLf,EAAI,KACJY,EAAI,SACJJ,GACEM,EAEJ,OACEb,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACvBF,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC/BC,cAAA,MAAIF,UAAU,kBAAiBC,SAAEY,IAEjCd,eAAA,KAAAE,SAAA,CACG,eACAS,EACIR,cAACO,EAAQ,CAACC,KAAMA,IAChBR,cAAA,UAAAD,SAAQ,yBAKjBC,cAAA,KAAGF,UAAU,iBAAgBC,SAC1BH,IAGHI,cAAA,SACCI,EAASQ,OACLZ,cAACG,EAAW,CAACC,SAAUA,IACvBJ,cAAA,KAAG,UAAQ,oBAAmBD,SAAC,wBChC7Bc,EAAWrB,IAAA,IAAC,MAAEsB,GAAOtB,EAAA,OAChCQ,cAAA,OAAKF,UAAU,WAAUC,SACtBe,EAAMT,KAAIK,GACTV,cAACS,EAAQ,CAACC,KAAMA,GAAWA,EAAKJ,SCWtC,MAAMQ,EAAQC,EAAgBV,KAAIK,IAAI,UACjCA,EACHF,MAXmBQ,EAWDN,EAAKM,OAVhBC,EAAgBC,MAAKV,GAAQA,EAAKF,KAAOU,KAC3C,MAULZ,UAPuBe,EAOGT,EAAKJ,GANxBc,EAAmBC,QAAO5B,GAAWA,EAAQ0B,SAAWA,MADjE,IAAyBA,EALJH,KAeRM,EAAMA,IACjBzB,eAAA,WAASC,UAAU,MAAKC,SAAA,CACtBC,cAAA,MAAIF,UAAU,aAAYC,SAAC,yBAE3BC,cAACa,EAAQ,CAACC,MAAOA,OCtBrBS,IAASC,OACPxB,cAACsB,EAAG,IACJG,SAASC,eAAe,W","file":"static/js/main.60060827.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import './PostInfo.scss';\n\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    body,\n    user,\n    comments,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          {' Posted by  '}\n          {user\n            ? (<UserInfo user={user} />)\n            : (<strong>User not found</strong>)\n          }\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n      {comments.length\n        ? (<CommentList comments={comments} />)\n        : (<b data-cy=\"NoCommentsMessage\">No comments yet</b>)\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}